name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

concurrency:
  group: ${{ github.event_name == 'pull_request' && format('{0}-{1}', github.workflow, github.event.pull_request.number) || github.run_id }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache: false

      - name: Check modernize (code style)
        run: |
          go run golang.org/x/tools/gopls/internal/analysis/modernize/cmd/modernize@latest -test ./...

      - name: golangci-lint
        uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8
        with:
          version: v2.2.1
          args: --timeout=30m --config=.golangci.yml
          only-new-issues: false
          skip-cache: true

  test-unit-coverage:
    name: Unit Tests & Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache: true

      - name: Install dependencies
        run: go mod download

      - name: Run unit tests with coverage threshold
        run: |
          echo "Coverage is calculated differently from codecov, expect this one to be higher"
          make test-unit-coverage-threshold

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5
        with:
          files: ./coverage_filtered.out
          disable_search: true
          fail_ci_if_error: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  test-e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install dependencies
        run: go mod download

      - name: Run full E2E test cycle
        run: make test-e2e-full

  mesh-cli-validation:
    name: Mesh CLI Validation (${{ matrix.env }} - ${{ matrix.validation }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          # Solo: data + construction
          - env: solo
            validation: data
          - env: solo
            validation: construction
          # Test: data (construction not included since it has to wait for the network to be synced)
          - env: test
            validation: data
          # Main: data only
          - env: main
            validation: data
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install dependencies
        run: go mod download

      - name: Build mesh-cli Docker image
        run: make mesh-cli-build

      - name: Run mesh-cli ${{ matrix.validation }} validation on ${{ matrix.env }}
        run: make mesh-cli-check-${{ matrix.validation }} ENV=${{ matrix.env }}

  security-scan:
    name: Security Scan (gosec)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache: true

      - name: Install dependencies
        run: go mod download

      - name: Install gosec
        run: go install github.com/securego/gosec/v2/cmd/gosec@v2.19.0

      - name: Run gosec (generate SARIF)
        continue-on-error: true
        run: |
          $(go env GOPATH)/bin/gosec -severity medium -confidence medium -exclude-generated -fmt sarif -out gosec.sarif ./...

      - name: Upload SARIF to Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        if: ${{ always() }}
        with:
          sarif_file: gosec.sarif
          category: gosec
