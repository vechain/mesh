# Build stage
FROM golang:1.24-alpine AS builder

# Set working directory
WORKDIR /app

# Install git, ca-certificates and build dependencies
RUN apk add --no-cache git ca-certificates gcc musl-dev

# Copy go mod files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Build the application
RUN CGO_ENABLED=1 GOOS=linux go build -a -installsuffix cgo -o mesh-server .

# Final stage
FROM alpine:latest

# Install ca-certificates and build dependencies for CGO
RUN apk --no-cache add ca-certificates gcc musl-dev

# Create non-root user
RUN adduser -D -s /bin/sh mesh

# Set working directory
WORKDIR /app

# Copy the binary from builder stage
COPY --from=builder /app/mesh-server .

# Copy configuration files
COPY --from=builder /app/config ./config

# Change ownership to mesh user
RUN chown -R mesh:mesh /app

# Switch to non-root user
USER mesh

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:8080/health || exit 1

# Run the application
CMD ["./mesh-server"]
